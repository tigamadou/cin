# Generated by Django 5.2.6 on 2025-09-25 23:21

from django.db import migrations


def remove_duplicate_emails(apps, schema_editor):
    """
    Remove duplicate participants with the same email, keeping only the first one.
    """
    Participant = apps.get_model('events', 'Participant')
    
    # Find all emails that have duplicates
    from django.db.models import Count
    duplicate_emails = Participant.objects.values('email').annotate(
        count=Count('email')
    ).filter(count__gt=1)
    
    for email_data in duplicate_emails:
        email = email_data['email']
        # Get all participants with this email, ordered by creation date
        participants = Participant.objects.filter(email=email).order_by('created_at')
        
        # Keep the first one, delete the rest
        participants_to_delete = participants[1:]
        for participant in participants_to_delete:
            participant.delete()


def reverse_remove_duplicates(apps, schema_editor):
    """
    This migration cannot be reversed as we're deleting data.
    """
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('events', '0004_alter_participant_email'),
    ]

    operations = [
        migrations.RunPython(remove_duplicate_emails, reverse_remove_duplicates),
    ]
